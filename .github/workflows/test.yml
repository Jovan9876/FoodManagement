name: Flask CI with MySQL

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:latest
        env:
          MYSQL_DATABASE: ${{ secrets.MYSQL_DB }}
          MYSQL_ROOT_PASSWORD: ${{ secrets.MYSQL_PASSWORD }}
          MYSQL_USER: ${{ secrets.MYSQL_USER }}
          MYSQL_PASSWORD: ${{ secrets.MYSQL_PASSWORD }}
        ports:
          - "3306:3306"
        options: >-
          --health-cmd="mysqladmin ping --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

      redis:
        image: redis:latest
        ports:
          - "6379:6379"
        options: >-
          --health-cmd="redis-cli ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
      - name: Check out repository
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          python -m venv venv
          source venv/bin/activate
          pip install -r requirements.txt
          pip install pylint pylint-fail-under

      - name: Set environment variables
        run: |
          echo "MYSQL_USER=${{ secrets.MYSQL_USER }}" >> $GITHUB_ENV
          echo "MYSQL_PASSWORD=${{ secrets.MYSQL_PASSWORD }}" >> $GITHUB_ENV
          echo "MYSQL_HOST=${{ secrets.MYSQL_HOST }}" >> $GITHUB_ENV
          echo "MYSQL_DB=${{ secrets.MYSQL_DB }}" >> $GITHUB_ENV
          echo "MYSQL_PORT=3306" >> $GITHUB_ENV
          echo "REDIS_HOST=${{ secrets.REDIS }}" >> $GITHUB_ENV
          echo "REDIS_PORT=6379" >> $GITHUB_ENV
          echo "CONSUMER_KEY=${{ secrets.CONSUMER_KEY }}" >> $GITHUB_ENV
          echo "CONSUMER_SECRET=${{ secrets.CONSUMER_SECRET }}" >> $GITHUB_ENV

      - name: Wait for MySQL to be ready
        run: |
          until mysql -h $MYSQL_HOST -u $MYSQL_USER -p$MYSQL_PASSWORD -P $MYSQL_PORT -e "SELECT 1"; do
            echo "Waiting for MySQL to be ready..."
            sleep 2
          done

      - name: Run pylint
        run: |
          source venv/bin/activate
          pylint --fail-under=8.0 FoodManagement/**/*.py

      - name: Run tests
        run: |
          source venv/bin/activate
          pytest --maxfail=1 --disable-warnings -v --tb=short

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push Backend Docker Image
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
        run: |
          docker build -t $DOCKER_USERNAME/food-management-backend:latest -f ./FoodManagement/.Dockerfile .
          docker push $DOCKER_USERNAME/food-management-backend:latest

      - name: Build and Push Client Docker Image
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
        run: |
          docker build -t $DOCKER_USERNAME/food-management-frontend:latest -f ./client/.Dockerfile .
          docker push $DOCKER_USERNAME/food-management-client:latest

      - name: Zip Artifacts
        run: |
          zip -r food-management-backend.zip FoodManagement/
          zip -r food-management-client.zip client/
          mkdir -p artifacts
          mv food-management-backend.zip artifacts/
          mv food-management-client.zip artifacts/

      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: foodmanagement-artifacts
          path: artifacts/
